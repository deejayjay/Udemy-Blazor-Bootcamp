@page "/category/create"
@page "/category/edit/{id:int}"

@inject ICategoryRepository _categoryRepo
@inject NavigationManager _navigationManager

<div class="row my-2">
    <h2 class="text-primary mb-3">@Title Category</h2>

    <div class="col-10">
        @if (IsLoading)
        {
            // Loading gif
            <div class="text-center">
                <img src="/images/loading.gif" alt="Loading" />
            </div>
        }
        else
        {
            <EditForm Model="Category" OnValidSubmit="UpsertCategory">
                <DataAnnotationsValidator />
                @*<ValidationSummary />*@
                <div class="form-group">
                    <label for="name" class="form-label">Name</label>
                    <InputText @bind-Value="Category.Name" class="form-control" id="name"></InputText>
                    <ValidationMessage For="()=>Category.Name" />
                </div>
                <div class="form-group mt-3">
                    <button class="btn btn-primary">@Title</button>
                    <NavLink href="/category" class="btn btn-secondary">Back to List</NavLink>
                </div>
            </EditForm>
        }        
    </div>
</div>

@code {
    [Parameter]
    public int Id { get; set; }

    private CategoryDTO Category { get; set; } = new();
    private string Title { get; set; } = "Create";
    private bool IsLoading { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (Id == 0)
            {
                // Create request
                IsLoading = false;
            }
            else
            {
                // Update request
                Title = "Update";
                await LoadCategory();
            }
        }
    }    

    private async Task LoadCategory()
    {
        IsLoading = true;
        StateHasChanged();
        Category = await _categoryRepo.Get(Id);
        IsLoading = false;
        StateHasChanged();
    }

    private async Task UpsertCategory()
    {
        if (Category.Id == 0)
        {
            // Create new category
            await _categoryRepo.Create(Category);            
        }
        else
        {
            // Update the category
            await _categoryRepo.Update(Category);
        }
        _navigationManager.NavigateTo("/category");
    }
}
