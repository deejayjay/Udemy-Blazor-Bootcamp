<div class="col">
    <section class="card h-100" @onclick="(args) => LastSelectedUpdated(args, Product.Name)">
        <div class="card-header">
            <h3>Product - @Product!.Id</h3>
            <div class="mb-3">
                <label for="@("favorite" + Product.Id)" class="form-check-label">Add to Favorite</label>
                <input type="checkbox" id="@("favorite" + Product.Id)" class="form-check-input" @onchange="FavoriteUpdated" />
            </div>
            <h5 class="card-title">Name: @Product.Name</h5>
            <div>
                Render Fragment from Parent: 
                @if (FirstFragment is not null)
                {
                    <span>&nbsp;@FirstFragment</span>
                }
                @if (SecondFragment is not null)
                {
                    <span>&nbsp;@SecondFragment</span>
                }
            </div>
            <div>
                <label for="@("showProperties" + Product.Id)" class="form-check-label">Show Properties</label>
                <input type="checkbox" id="@("showProperties" + Product.Id)" class="form-check-input" @bind-value="@Product.IsActive" checked="@Product.IsActive" />
            </div>
        </div>
        <div class="card-body">
            @if (Product.IsActive)
            {
                <div>
                    @foreach (var property in Product.ProductProperties!)
                    {
                        <div>@property.Key - @property.Value</div>
                    }
                </div>
            }
            <div class="mt-3">
                <_EditDeleteButton IsActive="@Product.IsActive" />
            </div>
        </div>
    </section>
</div>

@code {
    [Parameter]
    public Demo_Product? Product { get; set; }

    [Parameter]
    public EventCallback<bool> OnFavoriteUpdate { get; set; }

    [Parameter]
    public EventCallback<string> OnLastSelectedUpdate { get; set; }

    [Parameter]
    public RenderFragment? FirstFragment { get; set; }

    [Parameter]
    public RenderFragment? SecondFragment { get; set; }

    private async Task FavoriteUpdated(ChangeEventArgs e)
    {
        await OnFavoriteUpdate.InvokeAsync((bool)e.Value!);
    }

    private async Task LastSelectedUpdated(MouseEventArgs e, string productName)
    {
        await OnLastSelectedUpdate.InvokeAsync(productName);
    }
}
